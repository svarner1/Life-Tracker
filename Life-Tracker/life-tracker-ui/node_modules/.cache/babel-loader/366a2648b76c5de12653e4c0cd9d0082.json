{"ast":null,"code":"var _jsxFileName = \"/Users/sydney-varner/SITE/Life-Tracker/life-tracker-ui/src/components/NewExerciseForm/NewExerciseForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\"; // import axios from \"axios\"\n//import NotAllowed from \"../NotAllowed/NotAllowed\"\n\nimport apiClient from \"../../services/apiClient\";\nimport \"./NewExerciseForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NewExerciseForm({\n  user,\n  addActivity\n}) {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [error, setError] = useState(null);\n  const [exerciseEntry, setExerciseEntry] = useState({\n    duration: \"\",\n    intensity: \"\",\n    name: \"\"\n  });\n\n  const handleOnInputChange = event => {\n    setExerciseEntry(n => ({ ...n,\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  const handleOnSubmit = async () => {\n    setIsProcessing(true);\n    setError(e => ({ ...e,\n      exerciseEntry: null\n    }));\n    const {\n      data,\n      error\n    } = await apiClient.createExerciseEntry({\n      exerciseEntry,\n      user\n    }); // if (data) {\n    // }\n\n    if (error) {\n      setErrors(e => ({ ...e,\n        exerciseEntry: error\n      }));\n    }\n\n    setIsProcessing(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"createExercise\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create Exercise\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Exercise Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            placeholder: \"Exercise Name\",\n            value: exerciseEntry.name,\n            onChange: handleOnInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \" Duration (in minutes)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"duration\",\n            placeholder: \"Duration\",\n            value: exerciseEntry.duration,\n            onChange: handleOnInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Intensity (Scale: 1 - 10)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"password\",\n            placeholder: \"Intensity\",\n            value: exerciseEntry.duration,\n            onChange: handleOnInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          children: \"Add Exercise\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 7\n  }, this);\n} // return (\n//   <div className=\"NewPostForm\">\n//     <div className=\"card\">\n//       <h2>Create a new post</h2>\n//       {Boolean(error) && <span className=\"error\">{error}</span>}\n//       {renderForm()}\n//     </div>\n//   </div>\n// )\n\n_s(NewExerciseForm, \"TyD7av0U0hYpE6kV/CwBhBQDXok=\");\n\n_c = NewExerciseForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewExerciseForm\");","map":{"version":3,"sources":["/Users/sydney-varner/SITE/Life-Tracker/life-tracker-ui/src/components/NewExerciseForm/NewExerciseForm.js"],"names":["useState","apiClient","NewExerciseForm","user","addActivity","isLoading","setIsLoading","isProcessing","setIsProcessing","error","setError","exerciseEntry","setExerciseEntry","duration","intensity","name","handleOnInputChange","event","n","target","value","handleOnSubmit","e","data","createExerciseEntry","setErrors"],"mappings":"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","sourcesContent":["import { useState } from \"react\"\n// import axios from \"axios\"\n//import NotAllowed from \"../NotAllowed/NotAllowed\"\nimport apiClient from \"../../services/apiClient\"\nimport \"./NewExerciseForm.css\"\n\nexport default function NewExerciseForm({ user, addActivity }) {\n  const [isLoading, setIsLoading] = useState(false)\n  const [isProcessing, setIsProcessing] = useState(false)\n  const [error, setError] = useState(null)\n  const [exerciseEntry, setExerciseEntry] = useState({\n    duration: \"\",\n    intensity: \"\",\n    name: \"\",\n  })\n\n  const handleOnInputChange = (event) => {\n    setExerciseEntry((n) => ({ ...n, [event.target.name]: event.target.value }))\n  }\n\n  const handleOnSubmit = async () => {\n    setIsProcessing(true)\n    setError((e) => ({ ...e, exerciseEntry: null }))\n\n    const { data, error } = await apiClient.createExerciseEntry({ exerciseEntry, user })\n    // if (data) {\n      \n    // }\n    if (error) {\n      setErrors((e) => ({ ...e, exerciseEntry: error }))\n    }\n\n    setIsProcessing(false)    \n  }\n  \n    return (\n      <div className=\"createExercise\">\n        <div className=\"card\">\n          <h2>Create Exercise</h2>\n\n          <br />\n\n          <div className=\"form\">\n            <div className=\"input-field\">\n              <label htmlFor=\"email\">Exercise Name</label>\n              <input type=\"text\" name=\"name\" placeholder=\"Exercise Name\" value={exerciseEntry.name} onChange={handleOnInputChange} />\n            </div>\n\n            <div className=\"input-field\">\n              <label htmlFor=\"password\"> Duration (in minutes)</label>\n              <input\n                type=\"text\"\n                name=\"duration\"\n                placeholder=\"Duration\"\n                value={exerciseEntry.duration}\n                onChange={handleOnInputChange}\n              />\n            </div>\n\n            <div className=\"input-field\">\n              <label htmlFor=\"password\">Intensity (Scale: 1 - 10)</label>\n              <input\n                type=\"text\"\n                name=\"password\"\n                placeholder=\"Intensity\"\n                value={exerciseEntry.duration}\n                onChange={handleOnInputChange}\n              />\n            </div>\n\n            <button className=\"btn\">\n              Add Exercise\n            </button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  // return (\n  //   <div className=\"NewPostForm\">\n  //     <div className=\"card\">\n  //       <h2>Create a new post</h2>\n\n  //       {Boolean(error) && <span className=\"error\">{error}</span>}\n\n  //       {renderForm()}\n  //     </div>\n  //   </div>\n  // )"]},"metadata":{},"sourceType":"module"}