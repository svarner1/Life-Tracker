{"ast":null,"code":"import axios from \"axios\";\n\nclass ApiClient {\n  //DO I NEED TO PUT THE REMOTE HOST URL?\n  constructor(remoteHostUrl) {\n    //CHANGED THIS VALUE\n    this.remoteHostUrl = remoteHostUrl;\n    this.token = null;\n    this.tokenName = \"life_tracker_token\";\n  }\n\n  setToken(token) {\n    this.token = token;\n    localStorage.setItem(this.tokenName, token);\n  }\n\n  async request({\n    endpoint,\n    method = `GET`,\n    data = {}\n  }) {\n    const url = `${this.remoteHostUrl}/${endpoint}`;\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: this.token ? `Bearer ${this.token}` : \"\"\n    };\n\n    try {\n      const res = await axios({\n        url,\n        method,\n        data,\n        headers\n      });\n      return {\n        data: res.data,\n        error: null\n      };\n    } catch (error) {\n      var _error$response, _error$response$data, _error$response$data$;\n\n      console.error(\"APIclient.makeRequest.error:\");\n      console.error({\n        errorResponse: error.response\n      });\n      const message = error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : (_error$response$data$ = _error$response$data.error) === null || _error$response$data$ === void 0 ? void 0 : _error$response$data$.message;\n      return {\n        data: null,\n        error: message || String(error)\n      };\n    }\n  }\n\n  async fetchUserFromToken() {\n    return await this.request({\n      endpoint: `auth/me`,\n      method: `GET`\n    });\n  } // async getExerciseEntries() {\n  //   return await this.request({ endpoint: ``, method: `GET`})\n  // }\n  // async getExerciseEntries() {\n  //   return await this.request({ endpoint: ``, method: `GET`})\n  // }\n  // async getExerciseEntries() {\n  //   return await this.request({ endpoint: ``, method: `GET`})\n  // }\n\n\n  async signupUser(credentials) {\n    return await this.request({\n      endpoint: `auth/register`,\n      method: `POST`,\n      data: credentials\n    });\n  }\n\n  async loginUser(credentials) {\n    return await this.request({\n      endpoint: `auth/login`,\n      method: `POST`,\n      data: credentials\n    });\n  }\n\n  async logoutUser() {\n    this.setToken(null);\n    localStorage.setItem(this.tokenName, \"\");\n  }\n\n} //CHANGED TO LOCAL HOST AT 3000\n\n\nconst API = new ApiClient(process.env.REACT_APP_REMOTE_HOST_URL || \"http://localhost:3001\");\nexport default API;","map":{"version":3,"sources":["/Users/sydney-varner/SITE/Life-Tracker/life-tracker-ui/src/services/apiClient.js"],"names":["axios","ApiClient","constructor","remoteHostUrl","token","tokenName","setToken","localStorage","setItem","request","endpoint","method","data","url","headers","Authorization","res","error","console","errorResponse","response","message","String","fetchUserFromToken","signupUser","credentials","loginUser","logoutUser","API","process","env","REACT_APP_REMOTE_HOST_URL"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,SAAN,CAAgB;AACd;AACAC,EAAAA,WAAW,CAACC,aAAD,EAAgB;AACzB;AACA,SAAKA,aAAL,GAAqBA,aAArB;AACA,SAAKC,KAAL,GAAa,IAAb;AACA,SAAKC,SAAL,GAAiB,oBAAjB;AACD;;AAEDC,EAAAA,QAAQ,CAACF,KAAD,EAAQ;AACd,SAAKA,KAAL,GAAaA,KAAb;AACAG,IAAAA,YAAY,CAACC,OAAb,CAAqB,KAAKH,SAA1B,EAAqCD,KAArC;AACD;;AAEY,QAAPK,OAAO,CAAC;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,MAAM,GAAI,KAAtB;AAA4BC,IAAAA,IAAI,GAAG;AAAnC,GAAD,EAA0C;AACrD,UAAMC,GAAG,GAAI,GAAE,KAAKV,aAAc,IAAGO,QAAS,EAA9C;AAEA,UAAMI,OAAO,GAAG;AACd,sBAAgB,kBADF;AAEdC,MAAAA,aAAa,EAAE,KAAKX,KAAL,GAAc,UAAS,KAAKA,KAAM,EAAlC,GAAsC;AAFvC,KAAhB;;AAKA,QAAI;AACF,YAAMY,GAAG,GAAG,MAAMhB,KAAK,CAAC;AAAEa,QAAAA,GAAF;AAAOF,QAAAA,MAAP;AAAeC,QAAAA,IAAf;AAAqBE,QAAAA;AAArB,OAAD,CAAvB;AACA,aAAO;AAAEF,QAAAA,IAAI,EAAEI,GAAG,CAACJ,IAAZ;AAAkBK,QAAAA,KAAK,EAAE;AAAzB,OAAP;AACD,KAHD,CAGE,OAAOA,KAAP,EAAc;AAAA;;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAc,8BAAd;AACAC,MAAAA,OAAO,CAACD,KAAR,CAAc;AAAEE,QAAAA,aAAa,EAAEF,KAAK,CAACG;AAAvB,OAAd;AACA,YAAMC,OAAO,GAAGJ,KAAH,aAAGA,KAAH,0CAAGA,KAAK,CAAEG,QAAV,4EAAG,gBAAiBR,IAApB,kFAAG,qBAAuBK,KAA1B,0DAAG,sBAA8BI,OAA9C;AACA,aAAO;AAAET,QAAAA,IAAI,EAAE,IAAR;AAAcK,QAAAA,KAAK,EAAEI,OAAO,IAAIC,MAAM,CAACL,KAAD;AAAtC,OAAP;AACD;AACF;;AAEuB,QAAlBM,kBAAkB,GAAG;AACzB,WAAO,MAAM,KAAKd,OAAL,CAAa;AAAEC,MAAAA,QAAQ,EAAG,SAAb;AAAuBC,MAAAA,MAAM,EAAG;AAAhC,KAAb,CAAb;AACD,GAnCa,CAqCd;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;;AAEgB,QAAVa,UAAU,CAACC,WAAD,EAAc;AAC5B,WAAO,MAAM,KAAKhB,OAAL,CAAa;AAAEC,MAAAA,QAAQ,EAAG,eAAb;AAA6BC,MAAAA,MAAM,EAAG,MAAtC;AAA6CC,MAAAA,IAAI,EAAEa;AAAnD,KAAb,CAAb;AACD;;AAEc,QAATC,SAAS,CAACD,WAAD,EAAc;AAC3B,WAAO,MAAM,KAAKhB,OAAL,CAAa;AAAEC,MAAAA,QAAQ,EAAG,YAAb;AAA0BC,MAAAA,MAAM,EAAG,MAAnC;AAA0CC,MAAAA,IAAI,EAAEa;AAAhD,KAAb,CAAb;AACD;;AAEe,QAAVE,UAAU,GAAG;AACjB,SAAKrB,QAAL,CAAc,IAAd;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,KAAKH,SAA1B,EAAqC,EAArC;AACD;;AA5Da,C,CA+DhB;;;AACA,MAAMuB,GAAG,GAAG,IAAI3B,SAAJ,CAAc4B,OAAO,CAACC,GAAR,CAAYC,yBAAZ,IAAyC,uBAAvD,CAAZ;AAEA,eAAeH,GAAf","sourcesContent":["import axios from \"axios\"\n\nclass ApiClient {\n  //DO I NEED TO PUT THE REMOTE HOST URL?\n  constructor(remoteHostUrl) {\n    //CHANGED THIS VALUE\n    this.remoteHostUrl = remoteHostUrl\n    this.token = null\n    this.tokenName = \"life_tracker_token\"\n  }\n\n  setToken(token) {\n    this.token = token\n    localStorage.setItem(this.tokenName, token)\n  }\n\n  async request({ endpoint, method = `GET`, data = {} }) {\n    const url = `${this.remoteHostUrl}/${endpoint}`\n\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: this.token ? `Bearer ${this.token}` : \"\",\n    }\n\n    try {\n      const res = await axios({ url, method, data, headers })\n      return { data: res.data, error: null }\n    } catch (error) {\n      console.error(\"APIclient.makeRequest.error:\")\n      console.error({ errorResponse: error.response })\n      const message = error?.response?.data?.error?.message\n      return { data: null, error: message || String(error) }\n    }\n  }\n\n  async fetchUserFromToken() {\n    return await this.request({ endpoint: `auth/me`, method: `GET` })\n  }\n\n  // async getExerciseEntries() {\n  //   return await this.request({ endpoint: ``, method: `GET`})\n  // }\n\n  // async getExerciseEntries() {\n  //   return await this.request({ endpoint: ``, method: `GET`})\n  // }\n\n  // async getExerciseEntries() {\n  //   return await this.request({ endpoint: ``, method: `GET`})\n  // }\n\n  async signupUser(credentials) {\n    return await this.request({ endpoint: `auth/register`, method: `POST`, data: credentials })\n  }\n\n  async loginUser(credentials) {\n    return await this.request({ endpoint: `auth/login`, method: `POST`, data: credentials })\n  }\n\n  async logoutUser() {\n    this.setToken(null)\n    localStorage.setItem(this.tokenName, \"\")\n  }\n}\n\n//CHANGED TO LOCAL HOST AT 3000\nconst API = new ApiClient(process.env.REACT_APP_REMOTE_HOST_URL || \"http://localhost:3001\")\n\nexport default API"]},"metadata":{},"sourceType":"module"}